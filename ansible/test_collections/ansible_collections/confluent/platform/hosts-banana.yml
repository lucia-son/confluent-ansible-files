---
all:
  vars:
    ### ansible
    ansible_connection: ssh
    ansible_user: confluent
    ansible_become: true
    mask_secrets: false
    mask_sensitive_logs: false
    mask_sensitive_diff: false

    ### os user and group
    archive_owner: root
    archive_group: root
    zookeeper_user: zookeeper
    zookeeper_group: zookeeper
    kafka_broker_user: kafka
    kafka_broker_group: kafka
    kafka_connect_user: kafka
    kafka_connect_group: kafka
    ksql_user: ksql
    ksql_group: ksql

    health_check_enabled: false

    ### jdk
    custom_java_path: "/usr/lib/jvm/jdk-17-oracle-x64"

    ### package install
    confluent_server_enabled: true
    confluent_package_version: "7.3.2"
    confluent_cli_download_enabled: false
    installation_method: archive
    archive_destination_path: "/engn"
    confluent_archive_file_remote: false
    confluent_archive_file_source: "/home/confluent/ansible/source/confluent-7.3.2.tar.gz"
    config_prefix: ""
    zookeeper_config_prefix: "/zookeeper"
    kafka_broker_config_prefix: "/kafka"
    kafka_connect_config_prefix: "/connect"
    ksql_config_prefix: "/ksql"

    ### deployment strategy
    deployment_strategy: rolling

    ### sasl authentication
    sasl_protocol: kerberos
    kerberos_configure: false
    zookeeper_keytab_path: "{{ archive_destination_path }}/zookeeper/zookeeper.keytab"
    kafka_broker_keytab_path: "{{ archive_destination_path }}/kafka/kafka.keytab"
    kafka_connect_keytab_path: "{{ archive_destination_path }}/connect/connect.keytab"
    ksql_keytab_path: "{{ archive_destination_path }}/ksql/ksql.keytab"

    ### ssl
    ssl_enabled: false
    ssl_mutual_auth_enabled: false

    ### component cluster group
    #kafka_connect_cluster_ansible_group_names:
    #  - connect-cluster1
    #ksql_cluster_ansible_group_names:
    #  - ksql-cluster1

    ### kafka listeners
    kafka_broker_configure_multiple_listeners: false
    kafka_broker_configure_control_plane_listener: false

    ### monitoring
    jmxexporter_enabled: true
    jmxexporter_url_remote: false
    jmxexporter_jar_url: "/home/confluent/ansible/source/jmx/jmx_prometheus_javaagent-0.18.0.jar"
    jmxexporter_jar_path: "{{archive_destination_path}}/prometheus/jmx_prometheus_javaagent.jar"
    zookeeper_jmxexporter_config_source_path: "/home/confluent/ansible/source/jmx/zookeeper.yml"
    zookeeper_jmxexporter_config_path: "{{archive_destination_path}}/prometheus/zookeeper.yml"
    zookeeper_jmxexporter_port: 9696
    kafka_broker_jmxexporter_config_source_path: "/home/confluent/ansible/source/jmx/kafka_broker.yml"
    kafka_broker_jmxexporter_config_path: "{{archive_destination_path}}/prometheus/kafka_broker.yml"
    kafka_broker_jmxexporter_port: 7071
    kafka_connect_jmxexporter_config_source_path: "/home/confluent/ansible/source/jmx/kafka_connect.yml"
    kafka_connect_jmxexporter_config_path: "{{archive_destination_path}}/prometheus/kafka_connect.yml"
    kafka_connect_jmxexporter_port: 7071
    ksql_jmxexporter_config_source_path: "/home/confluent/ansible/source/jmx/ksql.yml"
    ksql_jmxexporter_config_path: "{{archive_destination_path}}/prometheus/ksql.yml"
    ksql_jmxexporter_port: 7072

    ### copy files
    zookeeper_copy_files:
      - source_path: "/home/confluent/ansible/source/log4j/zookeeper-log4j.properties"
        destination_path: "{{archive_destination_path}}/zookeeper/zookeeper-log4j.properties"
    kafka_broker_copy_files:
      - source_path: "/home/confluent/ansible/source/log4j/kafka-log4j.properties"
        destination_path: "{{archive_destination_path}}/kafka/kafka-log4j.properties"
      - source_path: "/home/confluent/ansible/source/keytabs/kafka_tester102.keytab"
        destination_path: "{{archive_destination_path}}/kafka/kafka-metric.keytab"
    kafka_connect_copy_files:
      - source_path: "/home/confluent/ansible/source/log4j/kafka-connect-log4j.properties"
        destination_path: "{{archive_destination_path}}/connect/kafka-connect-log4j.properties"
    ksql_copy_files:
      - source_path: "/home/confluent/ansible/source/log4j/ksqldb-log4j.properties"
        destination_path: "{{archive_destination_path}}/ksql/ksqldb-log4j.properties"

    ### zookeeper
    zookeeper_log_dir: /logs/zookeeper
    zookeeper_service_environment_overrides:
      KAFKA_HEAP_OPTS: "-Xms512m -Xmx512m"
      KAFKA_JVM_PERFORMANCE_OPTS: "-server -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent -XX:MaxInlineLevel=15 -Djava.awt.headless=true"
      KAFKA_GC_LOG_OPTS: "-Xlog:gc*:file={{zookeeper_log_dir}}/zookeeper-gc.log:time,tags:filecount=7,filesize=100M"
      KAFKA_JMX_OPTS: "-Dzookeeper.kerberos.removeHostFromPrincipal=true -Dzookeeper.kerberos.removeRealmFromPrincipal=true -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
      KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:{{archive_destination_path}}/zookeeper/zookeeper-log4j.properties"

    ### kafka
    kafka_broker_log_dir: /logs/kafka
    kafka_broker_service_environment_overrides:
      KAFKA_HEAP_OPTS: "-Xms4g -Xmx4g"
      KAFKA_JVM_PERFORMANCE_OPTS: "-server -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent -XX:MaxInlineLevel=15 -Djava.awt.headless=true"
      KAFKA_GC_LOG_OPTS: "-Xlog:gc*:file={{kafka_broker_log_dir}}/kafka-gc.log:time,tags:filecount=10,filesize=100M"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
      KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:{{archive_destination_path}}/kafka/kafka-log4j.properties"

    ### kafka connect
    kafka_connect_log_dir: /logs/kafka-connect
    kafka_connect_service_environment_overrides:
      KAFKA_HEAP_OPTS: "-Xms2g -Xmx2g"
      KAFKA_JVM_PERFORMANCE_OPTS: "-server -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent -XX:MaxInlineLevel=15 -Djava.awt.headless=true"
      KAFKA_GC_LOG_OPTS: "-Xlog:gc*:file={{kafka_connect_log_dir}}/connect-gc.log:time,tags:filecount=10,filesize=100M"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
      KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:{{archive_destination_path}}/connect/kafka-connect-log4j.properties"
      CLASSPATH: "{{archive_destination_path}}/confluent-{{confluent_package_version}}/share/java/kafka-connect-replicator/*"

    ### ksqldb
    ksql_log_dir: /logs/ksqldb
    ksql_service_environment_overrides:
      KSQL_HEAP_OPTS: "-Xms2g -Xmx2g"
      KSQL_JVM_PERFORMANCE_OPTS: "-XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent -XX:MaxInlineLevel=15 -Djava.awt.headless=true"
      KSQL_GC_LOG_OPTS: "-Xlog:gc*:file={{ksql_log_dir}}/ksql-server-gc.log:time,tags:filecount=10,filesize=100M"
      KSQL_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:{{archive_destination_path}}/ksql/ksqldb-log4j.properties"

zookeeper:
  vars:
    zookeeper_chroot: /confluent
    zookeeper_custom_properties:
      dataDir: /data/zookeeper
      tickTime: 2000
      initLimit: 5
      syncLimit: 2
      maxClientCnxns: 0
      autopurge.snapRetainCount: 10
      autopurge.purgeInterval: 1
      admin.enableServer: "false"
      4lw.commands.whitelist: ruok,stat,srvr
      quorum.auth.enableSasl: true
      quorum.auth.learnerRequireSasl: true
      quorum.auth.serverRequireSasl: true
      quorum.auth.kerberos.servicePrincipal: zookeeper/_HOST
      quorum.cnxn.threads.size: 20
  hosts:
    tester101:
      zookeeper_kerberos_keytab_path: /home/confluent/ansible/source/keytabs/zookeeper_tester101.keytab
      zookeeper_kerberos_principal: zookeeper/tester101@KAFKA.SECURE
      zookeeper_id: 101

kafka_broker:
  vars:
    kafka_broker_custom_properties:
      log.dirs: /data/kafka
      log.retention.hours: 168
      log.retention.check.interval.ms: 300000
      log.segment.bytes: 1073741824
      log.cleanup.policy: delete
      num.io.threads: 16
      num.network.threads: 8
      num.partitions: 1
      num.recovery.threads.per.data.dir: 1
      default.replication.factor: 1
      min.insync.replicas: 1
      replica.lag.time.max.ms: 30000
      unclean.leader.election.enable: "false"
      auto.create.topics.enable: "false"
      group.initial.rebalance.delay.ms: 3000
      offsets.topic.replication.factor: 1
      transaction.state.log.min.isr: 1
      transaction.state.log.replication.factor: 1
      confluent.balancer.enable: "true"
      confluent.balancer.heal.uneven.load.trigger: EMPTY_BROKER
      confluent.balancer.disk.max.load: 0.85
      confluent.balancer.topic.replication.factor: 1
      confluent.tier.enable: "false"
      zookeeper.set.acl: false
      metric.reporters: io.confluent.metrics.reporter.ConfluentMetricsReporter
      confluent.metrics.reporter.bootstrap.servers: "tester102:9092"
      confluent.metrics.reporter.sasl.mechanism: GSSAPI
      confluent.metrics.reporter.security.protocol: SASL_PLAINTEXT
      confluent.metrics.reporter.sasl.kerberos.service.name: kafka
      confluent.metrics.reporter.sasl.jaas.config: com.sun.security.auth.module.Krb5LoginModule required useKeyTab=true storeKey=true keyTab="/engn/kafka/kafka-metric.keytab" principal="kafka/tester102@KAFKA.SECURE";
  hosts:
    tester101:
      kafka_broker_kerberos_keytab_path: /home/confluent/ansible/source/keytabs/kafka_tester101.keytab
      kafka_broker_kerberos_principal: kafka/tester101@KAFKA.SECURE
      broker_id: 101
      kafka_broker_custom_properties:
        listeners: SASL_PLAINTEXT://tester101:9092
        security.inter.broker.protocol: SASL_PLAINTEXT

kafka_connect:
  vars:
    kafka_connect_group_id: banana-connect-cluster
    kafka_connect_custom_properties:
      config.storage.topic: banana-connect-configs
      offset.storage.topic: banana-connect-offsets
      status.storage.topic: banana-connect-status
      config.storage.replication.factor: 1
      offset.storage.partitions: 25
      offset.storage.replication.factor: 1
      offset.flush.interval.ms: 10000
      status.storage.partitions: 5
      status.storage.replication.factor: 1
      connector.client.config.override.policy: All
      confluent.monitoring.interceptor.topic: _confluent-monitoring
      consumer.confluent.monitoring.interceptor.bootstrap.servers: tester102:9092
      consumer.confluent.monitoring.interceptor.sasl.jaas.config: com.sun.security.auth.module.Krb5LoginModule required useKeyTab=true storeKey=true keyTab="/engn/connect/connect.keytab" principal="connect@KAFKA.SECURE";
      consumer.confluent.monitoring.interceptor.sasl.kerberos.service.name: kafka
      consumer.confluent.monitoring.interceptor.sasl.mechanism: GSSAPI
      consumer.confluent.monitoring.interceptor.security.protocol: SASL_PLAINTEXT
      consumer.interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
      producer.confluent.monitoring.interceptor.bootstrap.servers: tester102:9092
      producer.confluent.monitoring.interceptor.sasl.jaas.config: com.sun.security.auth.module.Krb5LoginModule required useKeyTab=true storeKey=true keyTab="/engn/connect/connect.keytab" principal="connect@KAFKA.SECURE";
      producer.confluent.monitoring.interceptor.sasl.kerberos.service.name: kafka
      producer.confluent.monitoring.interceptor.sasl.mechanism: GSSAPI
      producer.confluent.monitoring.interceptor.security.protocol: SASL_PLAINTEXT
      producer.interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
    kafka_connect_custom_rest_extension_classes:
      - io.confluent.connect.replicator.monitoring.ReplicatorMonitoringExtension
  hosts:
    tester104:
      kafka_connect_kerberos_keytab_path: /home/confluent/ansible/source/keytabs/connect.keytab
      kafka_connect_kerberos_principal: connect@KAFKA.SECURE

ksql:
  vars:
    ksql_service_id: banana.ksql_
    ksql_custom_properties:
      ksql.streams.state.dir: /data/ksqldb
      confluent.monitoring.interceptor.bootstrap.servers: tester102:9092
      confluent.monitoring.interceptor.sasl.jaas.config: com.sun.security.auth.module.Krb5LoginModule required useKeyTab=true storeKey=true keyTab="/engn/ksql/ksql.keytab" principal="ksql@KAFKA.SECURE";
      confluent.monitoring.interceptor.sasl.kerberos.service.name: kafka
      confluent.monitoring.interceptor.sasl.mechanism: GSSAPI
      confluent.monitoring.interceptor.security.protocol: SASL_PLAINTEXT
      confluent.monitoring.interceptor.topic: _confluent-monitoring
      consumer.interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
      producer.interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
  hosts:
    tester103:
      ksql_kerberos_keytab_path: /home/confluent/ansible/source/keytabs/ksql.keytab
      ksql_kerberos_principal: ksql@KAFKA.SECURE
    tester104:
      ksql_kerberos_keytab_path: /home/confluent/ansible/source/keytabs/ksql.keytab
      ksql_kerberos_principal: ksql@KAFKA.SECURE
